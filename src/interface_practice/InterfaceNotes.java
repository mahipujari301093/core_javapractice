package interface_practice;

public class InterfaceNotes {
	
	
/*
	 
âœ… 1.

Interface is a blueprint which contains only abstract methods

âœ… Correct, but with a small update:

Before Java 8 â†’ interfaces could contain only abstract methods.

From Java 8 onwards â†’ interfaces can also contain:

default methods (with body)

static methods (with body)

private methods (with body, used inside the interface only)


âœ… 2.

All the methods inside an interface are by default abstract and public

âœ… Absolutely correct!

You donâ€™t need to write public abstract â€” itâ€™s added automatically.

interface Animal {
    void sound(); // means public abstract void sound();
}

	 
âœ… 3.

To implement the interface we need to create a class using implements keyword

âœ… 4.

A class can implement multiple interfaces at a time

âœ… 5 .

One interface can extend another interface (using extends keyword)

A class implements one or more interfaces (using implements keyword)


âœ… 6 .

We can define static methods inside an interface, but they must be complete (with body).

You cannot have an incomplete static method â€” that part is correct.

âœ… 7 .

Variables are by default public static final 

====================================================================

ðŸ’¡ Simple Definition of Interface:

An interface is like a rule book for classes.
It tells what a class must do, but not how to do it.


Interface is deal or contract between client and developer 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
*/

}
